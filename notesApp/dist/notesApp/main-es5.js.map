{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/notes/notes.component.html","webpack:///./src/app/notes/notes.component.ts","webpack:///./src/app/pipes/search.pipe.ts","webpack:///./src/app/services/store-all-notes.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { NotesComponent } from \"./notes/notes.component\";\n\nconst routes: Routes = [\n  {\n    path: \"notes\",\n    component: NotesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<header>\n  <nav class=\"navbar navbar-expand-md bg-dark navbar-dark\">\n    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <button class=\"nav-link\" (click)=\"addedNewNote()\">\n            <i class=\"fas fa-plus\"></i> Add Note\n          </button>\n        </li>\n\n        <li class=\"nav-item\">\n          <button class=\"nav-link\" (click)=\"deleteNote()\">\n            <i class=\"fas fa-trash\"></i>\n            Delete Note\n          </button>\n        </li>\n      </ul>\n    </div>\n\n    <input\n      class=\"form-control mr-sm-2\"\n      type=\"text\"\n      ngDefaultControl\n      [(ngModel)]=\"searchItem\"\n      placeholder=\"Search\"\n    />\n\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#collapsibleNavbar\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  </nav>\n</header>\n\n<app-notes\n  (addedNewNote)=\"addedNewNote()\"\n  (deleteIndex)=\"getIndex($event)\"\n  [searchItem]=\"searchItem\"\n></app-notes>\n","import { Component } from \"@angular/core\";\nimport { StoreAllNotesService } from \"./services/store-all-notes.service\";\nimport { Note } from \"./interfaces/notes\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  searchItem: String = \"\";\n  newNote: boolean = false;\n  focusNote: any[] = [];\n  notesArray: Note[] = [];\n  index: number;\n  eachNote: Note;\n  editOrAddNote: string;\n\n  constructor(public storedNotes: StoreAllNotesService) {\n    this.focusNote = this.focusNote.fill(false);\n\n    //alert(\"from app\" + this.storedNotes.dummyWord);\n  }\n  addedNewNote() {\n    this.storedNotes.put();\n    this.storedNotes.subject.next(true);\n    //this.storedNotes.Notes.notes.unshift(this.eachNote);\n  }\n  getIndex(currentIndex) {\n    this.index = currentIndex;\n  }\n  deleteNote() {\n    this.storedNotes.Notes.notes.splice(this.index, 1);\n    localStorage.setItem(\"storedNotes\", JSON.stringify(this.storedNotes.Notes));\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { NotesComponent } from \"./notes/notes.component\";\nimport { StoreAllNotesService } from \"./services/store-all-notes.service\";\nimport { SearchPipe } from './pipes/search.pipe';\n\n@NgModule({\n  declarations: [AppComponent, NotesComponent, SearchPipe],\n  imports: [BrowserModule, FormsModule, ReactiveFormsModule, AppRoutingModule],\n  providers: [StoreAllNotesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","<div style=\"width: 100%\" class=\"row\">\n  <div class=\"leftCol col-md-4 col-sm-6 col-xs-6\">\n    <!-- {{ storedNotes.Notes | json }} -->\n    <div class=\"heading\">Notes</div>\n    <div class=\"noNotes\" *ngIf=\"!storedNotes?.Notes?.notes?.length\">\n      No notes to display\n    </div>\n    <div class=\"list\">\n      <ng-container *ngIf=\"storedNotes?.Notes?.notes?.length\">\n        <div\n          *ngFor=\"\n            let note of storedNotes.Notes.notes | search: searchItem;\n            let i = index\n          \"\n        >\n          <div\n            class=\"eachNote\"\n            [ngClass]=\"{ active: focusNote[i] }\"\n            (click)=\"selectedNote(note, i)\"\n          >\n            <p class=\"title\" *ngIf=\"note.title === ''\">\n              New Note\n            </p>\n            <p\n              class=\"title\"\n              *ngIf=\"note.title !== ''\"\n              [(ngModel)]=\"editOrAddNote\"\n              ngDefaultControl\n            >\n              {{ note?.title }}\n            </p>\n            <p class=\"body\" *ngIf=\"note.body === ''\">\n              No additional information\n            </p>\n            <p class=\"body\" *ngIf=\"note.body !== ''\">\n              {{ note?.body }}\n            </p>\n            <span class=\"date\">{{ note.timeStamp | date: \"medium\" }}</span>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"rightCol col-md-8 col-sm-6 col-xs-6 writingSpace\">\n    <ng-container *ngIf=\"storedNotes?.Notes?.notes?.length\">\n      <h5 *ngIf=\"(storedNotes?.Notes?.notes)[index]?.title\">\n        {{ (storedNotes?.Notes?.notes)[index]?.title }}\n      </h5>\n      <ng-container *ngIf=\"titleSave\">\n        <textarea\n          placeholder=\"Start Typing here...\"\n          type=\"text\"\n          name=\"noteBody\"\n          autofocus\n          (keyup)=\"debounceText($event.target.value)\"\n          [(ngModel)]=\"storedNotes.Notes.notes[index].body\"\n        >\n        </textarea>\n      </ng-container>\n      <ng-container *ngIf=\"!titleSave\">\n        <textarea\n          placeholder=\"Start Typing here...\"\n          type=\"text\"\n          name=\"noteBody\"\n          autofocus\n          (keyup)=\"debounceText($event.target.value)\"\n          [(ngModel)]=\"storedNotes.Notes.notes[index].title\"\n        >\n        </textarea>\n      </ng-container>\n    </ng-container>\n\n    <!-- {{ (storedNotes?.Notes?.Notes?.notes)[index]?.body | json }} -->\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { StoreAllNotesService } from \"../services/store-all-notes.service\";\nimport { Note, NoteObject } from \"../interfaces/notes\";\nimport * as lodash from \"lodash\";\n\n@Component({\n  selector: \"app-notes\",\n  templateUrl: \"./notes.component.html\",\n  styleUrls: [\"./notes.component.css\"]\n})\nexport class NotesComponent implements OnInit {\n  @Input() searchItem: string;\n  notesArray: Note[] = [];\n  editOrAddNote: string;\n  index: number = 0;\n  focusNote: boolean[] = [];\n  titleSave: boolean = false;\n\n  // @Input() set search(value) {\n  //   console.log(value);\n  // }\n  @Output() deleteIndex: EventEmitter<number> = new EventEmitter();\n\n  constructor(public storedNotes: StoreAllNotesService) {\n    this.storedNotes.subject.subscribe(data => {\n      this.focusNote = this.focusNote.fill(false);\n      this.focusNote[0] = true;\n      this.titleSave = false;\n    });\n  }\n\n  ngOnInit() {\n    console.log(this.storedNotes.get());\n    this.focusNote = this.focusNote.fill(false);\n    this.focusNote[0] = true;\n    //alert(\"from notes\" + this.storedNotes.dummyWord);\n  }\n\n  selectedNote(note, i) {\n    this.titleSave = true;\n    this.focusNote.fill(false);\n    this.index = i;\n    this.focusNote[this.index] = this.focusNote[this.index] ? false : true;\n    //console.log(note, this.index);\n    this.deleteIndex.emit(this.index);\n  }\n\n  keyUpFunction(event) {\n    if (!this.storedNotes.Notes.notes[this.index].body) {\n      if (event.indexOf(\"\\n\") != -1) {\n        this.storedNotes.Notes.notes[this.index].title = event.slice(\n          0,\n          event.indexOf(\"\\n\")\n        );\n        this.storedNotes.Notes.notes[this.index].body = event.slice(\n          event.indexOf(\"\\n\")\n        );\n      } else {\n        this.storedNotes.Notes.notes[this.index].title = event;\n        // this.storedNotes.Notes.notes[this.index].body = event;\n      }\n    } else {\n      this.storedNotes.Notes.notes[this.index].body = event;\n    }\n\n    localStorage.setItem(\"storedNotes\", JSON.stringify(this.storedNotes.Notes));\n    //this.storedNotes.Notes.notes[this.index].title = event;\n    this.titleSave = true;\n  }\n  debounceText = lodash.debounce(\n    event => this.keyUpFunction(event),\n    1000,\n    true\n  );\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Note } from \"../interfaces/notes\";\n\n@Pipe({\n  name: \"search\"\n})\nexport class SearchPipe implements PipeTransform {\n  transform(notes: any[], search: any): any[] {\n    if (!notes || !search) {\n      return notes;\n    }\n    return notes.filter(\n      note =>\n        note.body.toLowerCase().indexOf(search.toLowerCase()) !== -1 ||\n        note.title.toLowerCase().indexOf(search.toLowerCase()) !== -1\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { NoteObject, Note } from \"../interfaces/notes\";\nimport { Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StoreAllNotesService {\n  Notes: any;\n  notesArray: Note[] = [];\n  eachNote: Note;\n  subject: Subject<Object>;\n\n  constructor() {\n    this.subject = new Subject();\n    let storageData = localStorage.getItem(\"storedNotes\");\n    if (!storageData) {\n      let obj = {\n        title: \"\",\n        body: \"\",\n        timeStamp: new Date()\n      };\n\n      this.notesArray.push(obj);\n\n      this.Notes = {\n        notes: this.notesArray\n      };\n      localStorage.setItem(\"storedNotes\", JSON.stringify(this.Notes));\n    } else {\n      this.Notes = JSON.parse(storageData);\n    }\n  }\n  put() {\n    let obj = {\n      title: \"\",\n      body: \"\",\n      timeStamp: new Date()\n    };\n    this.Notes.notes.unshift(obj);\n  }\n  get() {\n    return this.Notes;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}